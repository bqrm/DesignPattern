/***************************************************
 * @file		MainCaller.cpp
 * @section		
 * @brief		example to use callback
 * @author		bqrmtao@gmail.com
 * @date		2018/07/12
 * @version		1.0
 * @copyright	bqrmtao@gmail.com
***************************************************/

#include "CallbackImp.h"
#include "CallbackKeeper.h"
#include "GenerateCallbackThread.h"

using namespace std;

void RegisterCallback(ICallback* pCallbackPtr)
{
	CCallbackKeeper::GetInstance()->SetCallbackPtr(pCallbackPtr);
}

int main(int argc, char **argv)
{
	CCallbackImp* pCallbackPtr = new CCallbackImp();
	RegisterCallback(pCallbackPtr);

	CGenerateCallbackThread *pGenerateCallback = new CGenerateCallbackThread();
	pGenerateCallback->SetSleepSpanInWhileLoop(3000);
	pGenerateCallback->SetThreadActive(true);
	pGenerateCallback->StartThread();

	printf("press any key to stop\n");
	getchar();

	pGenerateCallback->StopThread();

	delete pGenerateCallback;
	pGenerateCallback = nullptr;

	CallbackParam sParam;
	sParam.fOprd1 = 2;
	sParam.fOprd2 = 3;
	printf("\nevent \"EVENT_SUB\" generated by MainCaller\n");
	CCallbackKeeper::GetInstance()->GetCallbackPtr()->ProcessCallback(1, &sParam);

	delete pCallbackPtr;
	pCallbackPtr = nullptr;

	printf("press any key to exit...\n");
	getchar();
}